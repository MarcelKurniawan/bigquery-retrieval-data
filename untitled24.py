# -*- coding: utf-8 -*-
"""Untitled24.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17Ti1fYNe7r6h3CEmuSibqZhTr1cerfnZ
"""

import streamlit as st
from google.cloud import bigquery
from google.oauth2 import service_account
import pandas as pd
import os

# Judul aplikasi
st.title("ðŸ“Š BigQuery Data Explorer")

# Fungsi untuk membuat koneksi ke BigQuery
def create_bigquery_client(credentials_path):
    try:
        credentials = service_account.Credentials.from_service_account_file(
            credentials_path,
            scopes=["199556162994-5e9pfagjmraj2e3pjvfg6k6qc4tmbpns.apps.googleusercontent.com"],
        )
        client = bigquery.Client(credentials=credentials, project=credentials.project_id)
        return client
    except Exception as e:
        st.error(f"Gagal membuat koneksi ke BigQuery: {e}")
        return None

# Fungsi untuk menjalankan query
def run_query(client, query):
    try:
        query_job = client.query(query)
        results = query_job.result()
        df = results.to_dataframe()
        return df
    except Exception as e:
        st.error(f"Error menjalankan query: {e}")
        return None

# Upload kredensial
st.sidebar.header("Konfigurasi BigQuery")
credential_file = st.sidebar.file_uploader(
    "Upload file kredensial Google Cloud (JSON)",
    type=["json"],
    help="File JSON kredensial service account Google Cloud"
)

# Input parameter query
st.sidebar.header("Parameter Query")
project_id = st.sidebar.text_input("Project ID", help="Project ID BigQuery Anda")
dataset_id = st.sidebar.text_input("Dataset ID", help="Dataset ID yang akan diakses")
table_id = st.sidebar.text_input("Table ID", help="Table ID yang akan diakses")

# Kolom yang ingin ditampilkan
columns = st.sidebar.text_input(
    "Kolom (pisahkan dengan koma)",
    "*",
    help="Kolom yang ingin ditampilkan, gunakan * untuk semua kolom"
)

# Kondisi WHERE
where_condition = st.sidebar.text_input(
    "Kondisi WHERE (opsional)",
    help="Contoh: tanggal BETWEEN '2023-01-01' AND '2023-12-31'"
)

# Limit data
limit = st.sidebar.number_input(
    "Limit data",
    min_value=1,
    max_value=1000000000000,
    value=1000,
    help="Jumlah maksimal baris yang akan diambil"
)

# Membuat query berdasarkan input
query = f"""
SELECT {columns}
FROM `{project_id}.{dataset_id}.{table_id}`
"""

if where_condition:
    query += f" WHERE {where_condition}"

query += f" LIMIT {limit}"

# Tampilkan query yang akan dijalankan
st.subheader("Query yang akan dijalankan")
st.code(query, language="sql")

# Jalankan query ketika tombol ditekan
if st.button("Jalankan Query"):
    if credential_file is None:
        st.warning("Silakan upload file kredensial terlebih dahulu")
    elif not project_id or not dataset_id or not table_id:
        st.warning("Silakan isi Project ID, Dataset ID, dan Table ID")
    else:
        # Simpan file kredensial sementara
        credentials_path = "temp_credentials.json"
        with open(credentials_path, "wb") as f:
            f.write(credential_file.getvalue())

        # Buat koneksi
        with st.spinner("Menghubungkan ke BigQuery..."):
            client = create_bigquery_client(credentials_path)

        if client:
            with st.spinner("Menjalankan query..."):
                df = run_query(client, query)

            if df is not None:
                st.success(f"Berhasil mengambil {len(df)} baris data")

                # Tampilkan data
                st.subheader("Preview Data")
                st.dataframe(df.head())

                # Ekspor ke CSV
                st.subheader("Ekspor Data")
                csv = df.to_csv(index=False).encode('utf-8')
                st.download_button(
                    label="Download sebagai CSV",
                    data=csv,
                    file_name=f"{table_id}_data.csv",
                    mime="text/csv",
                    help="Klik untuk mengunduh data sebagai file CSV"
                )

            # Hapus file kredensial sementara
            os.remove(credentials_path)

# Catatan penting
st.sidebar.markdown("---")
st.sidebar.info("""
**Catatan:**
1. Pastikan service account memiliki akses ke BigQuery
2. File kredensial hanya digunakan sementara dan tidak disimpan
3. Query yang kompleks mungkin membutuhkan waktu eksekusi lebih lama
""")